// <auto-generated />
using System;
using BuildingManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuildingManagementSystem.Data.Migrations
{
    [DbContext(typeof(ManagementDbContext))]
    [Migration("20230804183138_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BuildingManagementSystem.Data.Block", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockId"), 1L, 1);

                    b.Property<string>("BlockName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("BlockId");

                    b.HasIndex("BlockId");

                    b.ToTable("Block", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.CardInformation", b =>
                {
                    b.Property<int>("CardInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardInformationId"), 1L, 1);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.HasKey("CardInformationId");

                    b.HasIndex("CVV")
                        .IsUnique();

                    b.HasIndex("ReferenceNumber")
                        .IsUnique();

                    b.HasIndex("ResidentId")
                        .IsUnique();

                    b.ToTable("CardInformation", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Flat", b =>
                {
                    b.Property<int>("FlatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlatId"), 1L, 1);

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<int>("FlatNumber")
                        .HasColumnType("int");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<bool>("OwnerorTenant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TypeOfFlat")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("FlatId");

                    b.HasIndex("BlockId")
                        .IsUnique();

                    b.HasIndex("ResidentId")
                        .IsUnique();

                    b.ToTable("Flat", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasDefaultValue(0m);

                    b.Property<int>("InvoiceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("InvoiceTypeId")
                        .IsUnique();

                    b.HasIndex("ResidentId")
                        .IsUnique();

                    b.ToTable("Invoice", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.InvoiceType", b =>
                {
                    b.Property<int>("InvoiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceTypeId"), 1L, 1);

                    b.Property<string>("InvoiceTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("InvoiceTypeId");

                    b.ToTable("InvoiceType", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SendingTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MessageId");

                    b.HasIndex("ResidentId");

                    b.ToTable("Message", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.HasIndex("ResidentId")
                        .IsUnique();

                    b.ToTable("Payment", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Resident", b =>
                {
                    b.Property<int>("ResidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResidentId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TCNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<string>("VehiclePlate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("ResidentId");

                    b.HasIndex("TCNo")
                        .IsUnique();

                    b.HasIndex("VehiclePlate")
                        .IsUnique();

                    b.ToTable("Resident", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleBrand")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VehicleModel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VehiclePlate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("VehicleId");

                    b.HasIndex("ResidentId");

                    b.HasIndex("VehiclePlate")
                        .IsUnique();

                    b.ToTable("Vehicle", "dbo");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.CardInformation", b =>
                {
                    b.HasOne("BuildingManagementSystem.Data.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Flat", b =>
                {
                    b.HasOne("BuildingManagementSystem.Data.Block", "Block")
                        .WithMany("Flats")
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuildingManagementSystem.Data.Resident", "Resident")
                        .WithMany("Flats")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Block");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Invoice", b =>
                {
                    b.HasOne("BuildingManagementSystem.Data.InvoiceType", "InvoiceType")
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagementSystem.Data.Resident", "Resident")
                        .WithMany("Invoices")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InvoiceType");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Message", b =>
                {
                    b.HasOne("BuildingManagementSystem.Data.Resident", "Resident")
                        .WithMany("Messages")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Payment", b =>
                {
                    b.HasOne("BuildingManagementSystem.Data.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagementSystem.Data.Resident", "Resident")
                        .WithMany("Payments")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Vehicle", b =>
                {
                    b.HasOne("BuildingManagementSystem.Data.Resident", "Resident")
                        .WithMany("Vehicles")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Block", b =>
                {
                    b.Navigation("Flats");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Invoice", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.InvoiceType", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("BuildingManagementSystem.Data.Resident", b =>
                {
                    b.Navigation("Flats");

                    b.Navigation("Invoices");

                    b.Navigation("Messages");

                    b.Navigation("Payments");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
